"iphone 7 Plus", "iphone 8",
"iphone 8 Plus", "iphone X",
"iphone XR", "iphone XS",
"iphone XS Max", "iphone 11",
"iphone 11 Pro", "iphone 11 Pro Max"),
ordered=TRUE))
# Check what we missed
data.listings.missing <- data.listings %>%
filter(is.na(iphone_type))
data.phone <- data.listings %>%
group_by(iphone_type) %>%
summarise(N = n(),
avg_price = mean(price),
sd_price = sd(price))
View(data.listings)
View(data.phone)
ggplot(data.phone, aes(x=iphone_type, y=avg_price)) +
geom_bar(stat="identity") +
labs(x="", y="Average price") +
theme_pubr()
ggplot(data.phone, aes(x=iphone_type, y=avg_price)) +
geom_bar(stat="identity") +
labs(x="", y="Average price") +
theme_pubr() +
theme(panel.grid.major.y = element_line())
ggplot(data.phone, aes(x=iphone_type, y=avg_price)) +
geom_bar(stat="identity") +
labs(x="", y="Average price") +
theme_pubr() +
theme(panel.grid.major.y = element_line(),
axis.text.x = element_text(angle=90))
ggplot(data.phone, aes(x=iphone_type, y=avg_price)) +
geom_bar(stat="identity") +
labs(x="", y="Average price") +
theme_pubr() +
theme(panel.grid.major.y = element_line(),
axis.text.x = element_text(angle=-45))
ggplot(data.phone, aes(x=iphone_type, y=avg_price)) +
geom_bar(stat="identity") +
labs(x="", y="Average price") +
theme_pubr() +
theme(panel.grid.major.y = element_line(),
axis.text.x = element_text(angle=45))
ggplot(data.phone, aes(x=iphone_type, y=avg_price)) +
geom_bar(stat="identity") +
labs(x="", y="Average price") +
theme_pubr() +
theme(panel.grid.major.y = element_line(),
axis.text.x = element_text(angle=45, vjust = 1))
ggplot(data.phone, aes(x=iphone_type, y=avg_price)) +
geom_bar(stat="identity") +
labs(x="", y="Average price") +
theme_pubr() +
theme(panel.grid.major.y = element_line(),
axis.text.x = element_text(angle=45, vjust = 0))
ggplot(data.phone, aes(x=iphone_type, y=avg_price)) +
geom_bar(stat="identity") +
labs(x="", y="Average price") +
theme_pubr() +
theme(panel.grid.major.y = element_line(),
axis.text.x = element_text(angle=45, vjust = 0.1))
ggplot(data.phone, aes(x=iphone_type, y=avg_price)) +
geom_bar(stat="identity") +
labs(x="", y="Average price") +
theme_pubr() +
theme(panel.grid.major.y = element_line(),
axis.text.x = element_text(angle=45, vjust = 0.5))
ggplot(data.phone, aes(x=iphone_type, y=avg_price)) +
geom_bar(stat="identity") +
labs(x="", y="Average price") +
theme_pubr() +
theme(panel.grid.major.y = element_line(),
axis.text.x = element_text(angle=-90, vjust = 0.5))
ggplot(data.phone, aes(x=iphone_type, y=avg_price)) +
geom_bar(stat="identity") +
labs(x="", y="Average price") +
theme_pubr() +
theme(panel.grid.major.y = element_line(),
axis.text.x = element_text(angle=-90, vjust = 0.1))
ggplot(data.phone, aes(x=iphone_type, y=avg_price)) +
geom_bar(stat="identity") +
labs(x="", y="Average price") +
theme_pubr() +
theme(panel.grid.major.y = element_line(),
axis.text.x = element_text(angle=-90, vjust = 0.1, hjust=0))
ggplot(data.phone, aes(x=iphone_type, y=avg_price)) +
geom_bar(stat="identity") +
labs(x="", y="Average price") +
theme_pubr() +
theme(panel.grid.major.y = element_line(color="#858585"),
axis.text.x = element_text(angle=-90, vjust = 0.1, hjust=0))
ggplot(data.phone, aes(x=iphone_type, y=avg_price)) +
geom_bar(stat="identity") +
labs(x="", y="Average price") +
scale_y_continuous(labels = dollar_format(suffix = "€", prefix = "")) +
theme_pubr() +
theme(panel.grid.major.y = element_line(color="#858585"),
axis.text.x = element_text(angle=-90, vjust = 0.1, hjust=0))
ggplot(data.phone, aes(x=iphone_type, y=avg_price)) +
geom_bar(stat="identity") +
labs(x="", y="Average price") +
scale_y_continuous(labels = scales::dollar_format(suffix = "€", prefix = "")) +
theme_pubr() +
theme(panel.grid.major.y = element_line(color="#858585"),
axis.text.x = element_text(angle=-90, vjust = 0.1, hjust=0))
ggplot(data.phone, aes(x=iphone_type, y=avg_price)) +
geom_bar(stat="identity") +
labs(x="", y="Average price") +
scale_y_continuous(labels = scales::dollar_format(suffix = "", prefix = "€")) +
theme_pubr() +
theme(panel.grid.major.y = element_line(color="#858585"),
axis.text.x = element_text(angle=-90, vjust = 0.1, hjust=0))
data.first.analysis <- data.listings %>%
filter(!is.na(iphone_type), post_date >= ymd('2019-01-01')) %>%
mutate(week = week(post_date)) %>%
group_by(week, iphone_type) %>%
summarise(avg_price = mean(price))
# Plot
ggplot(data.first.analysis, aes(x=week, y=avg_price, colour=iphone_type)) +
geom_line() +
theme_pubr()
View(data)
# Clean date and price column
data.clean <- data %>%
mutate(price = if_else(str_detect(price, "€"), str_sub(price, 3),
NA_character_)) %>%
filter(!is.na(price)) %>%
mutate(price = str_replace(price, "\\.", ""),
price = as.numeric(str_replace(price, ",", "."))) %>%
mutate(post_date = dmy_hm(date, locale="nl_NL"))
# For now, only use actual listings
data.listings <- data.clean #%>%
data.listings <- data.listings %>%
mutate(title = str_to_lower(title)) %>%
mutate(iphone_type = case_when(
str_detect(title, "iphone 5s") ~ "iphone 5s",
str_detect(title, "iphone 5") ~ "iphone 5",
str_detect(title, "iphone 6s") ~ "iphone 6s",
str_detect(title, "iphone 6") ~ "iphone 6",
str_detect(title, "iphone se") ~ "iphone SE",
str_detect(title, "iphone 7 plus") ~ "iphone 7 Plus",
str_detect(title, "iphone 7") ~ "iphone 7",
str_detect(title, "iphone 8 plus") ~ "iphone 8 Plus",
str_detect(title, "iphone 8") ~ "iphone 8",
str_detect(title, "iphone xr") ~ "iphone XR",
str_detect(title, "iphone xs max") ~ "iphone XS Max",
str_detect(title, "iphone xs") ~ "iphone XS",
str_detect(title, "iphone x") ~ "iphone X",
str_detect(title, "iphone 10") ~ "iphone X",
str_detect(title, "iphone 11 pro max") ~ "iphone 11 Pro Max",
str_detect(title, "iphone 11 pro") ~ "iphone 11 Pro",
str_detect(title, "iphone 11") ~ "iphone 11",
TRUE ~ NA_character_
)) %>%
filter(!is.na(iphone_type)) %>%
mutate(iphone_type = factor(iphone_type, levels=c("iphone 5", "iphone 5s",
"iphone 6", "iphone SE",
"iphone 6s", "iphone 7",
"iphone 7 Plus", "iphone 8",
"iphone 8 Plus", "iphone X",
"iphone XR", "iphone XS",
"iphone XS Max", "iphone 11",
"iphone 11 Pro", "iphone 11 Pro Max"),
ordered=TRUE))
# Check what we missed
data.listings.missing <- data.listings %>%
filter(is.na(iphone_type))
data.phone <- data.listings %>%
group_by(iphone_type) %>%
summarise(N = n(),
avg_price = mean(price),
sd_price = sd(price))
ggplot(data.phone, aes(x=iphone_type, y=avg_price)) +
geom_bar(stat="identity") +
labs(x="", y="Average price") +
scale_y_continuous(labels = scales::dollar_format(suffix = "", prefix = "€")) +
theme_pubr() +
theme(panel.grid.major.y = element_line(color="#858585"),
axis.text.x = element_text(angle=-90, vjust = 0.1, hjust=0))
data.first.analysis <- data.listings %>%
filter(!is.na(iphone_type), post_date >= ymd('2019-01-01')) %>%
mutate(week = week(post_date)) %>%
group_by(week, iphone_type) %>%
summarise(avg_price = mean(price))
# Plot
ggplot(data.first.analysis, aes(x=week, y=avg_price, colour=iphone_type)) +
geom_line() +
theme_pubr()
# Plot
ggplot(data.first.analysis, aes(x=week, y=avg_price, colour=iphone_type)) +
geom_line() +
labs(x="Week number", y="Average price") +
scale_y_continuous(labels = scales::dollar_format(suffix = "", prefix = "€")) +
scale_x_continuous(breaks = c(1, 10, 20, 30, 38)) +
theme_pubr() +
theme(panel.grid.major.y = element_line(color="#858585"))
# Plot
ggplot(data.first.analysis, aes(x=week, y=avg_price, colour=iphone_type)) +
geom_line() +
labs(x="Week number", y="Average price") +
scale_y_continuous(labels = scales::dollar_format(suffix = "", prefix = "€")) +
scale_x_continuous(breaks = c(1, 10, 20, 30, 38)) +
theme_pubr() +
theme(panel.grid.major.y = element_line(color="#d6d6d6"))
# Plot
ggplot(data.first.analysis, aes(x=week, y=avg_price, colour=iphone_type)) +
geom_line() +
geom_point() +
labs(x="Week number", y="Average price") +
scale_y_continuous(labels = scales::dollar_format(suffix = "", prefix = "€")) +
scale_x_continuous(breaks = c(1, 10, 20, 30, 38)) +
theme_pubr() +
theme(panel.grid.major.y = element_line(color="#d6d6d6"))
# Plot
ggplot(data.first.analysis, aes(x=week, y=avg_price, colour=iphone_type)) +
geom_line() +
geom_point() +
labs(x="Week number", y="Average price") +
scale_y_continuous(labels = scales::dollar_format(suffix = "", prefix = "€"),
breaks = c(0, 250, 500, 750, 1000, 1250, 1500)) +
scale_x_continuous(breaks = c(1, 10, 20, 30, 38)) +
theme_pubr() +
theme(panel.grid.major.y = element_line(color="#d6d6d6"))
# Plot
ggplot(data.first.analysis, aes(x=week, y=avg_price, colour=iphone_type)) +
geom_line() +
geom_point() +
labs(x="Week number", y="Average price", title="Average iPhone Prices Listed on September 23, 2019") +
scale_y_continuous(labels = scales::dollar_format(suffix = "", prefix = "€"),
breaks = c(0, 250, 500, 750, 1000, 1250, 1500)) +
scale_x_continuous(breaks = c(1, 10, 20, 30, 38)) +
theme_pubr() +
theme(panel.grid.major.y = element_line(color="#d6d6d6"))
# Plot
ggplot(data.first.analysis, aes(x=week, y=avg_price, colour=iphone_type)) +
geom_line() +
geom_point() +
labs(x="Week number", y="Average price", title="Average iPhone Prices Listed on September 23, 2019") +
scale_y_continuous(labels = scales::dollar_format(suffix = "", prefix = "€"),
breaks = c(0, 250, 500, 750, 1000, 1250, 1500)) +
scale_x_continuous(breaks = c(1, 10, 20, 30, 38)) +
theme_pubr() +
theme(panel.grid.major.y = element_line(color="#d6d6d6"),
legend.position = "bottom")
# Plot
ggplot(data.first.analysis, aes(x=week, y=avg_price, colour=iphone_type)) +
geom_line() +
geom_point() +
labs(x="Week number", y="Average price", colour="",
title="Average iPhone Prices Listed on September 23, 2019") +
scale_y_continuous(labels = scales::dollar_format(suffix = "", prefix = "€"),
breaks = c(0, 250, 500, 750, 1000, 1250, 1500)) +
scale_x_continuous(breaks = c(1, 10, 20, 30, 38)) +
theme_pubr() +
theme(panel.grid.major.y = element_line(color="#d6d6d6"),
legend.position = "bottom")
# Plot
ggplot(data.first.analysis, aes(x=week, y=avg_price, colour=iphone_type)) +
geom_line() +
geom_point() +
labs(x="Week number", y="Average price", colour="",
title="Average iPhone Prices Listed on September 23, 2019",
caption = "Source: marktplaats.nl") +
scale_y_continuous(labels = scales::dollar_format(suffix = "", prefix = "€"),
breaks = c(0, 250, 500, 750, 1000, 1250, 1500)) +
scale_x_continuous(breaks = c(1, 10, 20, 30, 38)) +
theme_pubr() +
theme(panel.grid.major.y = element_line(color="#d6d6d6"),
legend.position = "bottom")
# Plot
ggplot(data.first.analysis, aes(x=week, y=avg_price, colour=iphone_type)) +
annotate(xmin=34, xmax=34, ymin=-Inf, ymax=Inf, colour="grey", alpha=0.3) +
geom_line() +
geom_point() +
labs(x="Week number", y="Average price", colour="",
title="Average iPhone Prices Listed on September 23, 2019",
caption = "Source: marktplaats.nl") +
scale_y_continuous(labels = scales::dollar_format(suffix = "", prefix = "€"),
breaks = c(0, 250, 500, 750, 1000, 1250, 1500)) +
scale_x_continuous(breaks = c(1, 10, 20, 30, 38)) +
theme_pubr() +
theme(panel.grid.major.y = element_line(color="#d6d6d6"),
legend.position = "bottom")
# Plot
ggplot(data.first.analysis, aes(x=week, y=avg_price, colour=iphone_type)) +
annotate(geom="rect", xmin=34, xmax=34, ymin=-Inf, ymax=Inf, colour="grey", alpha=0.3) +
geom_line() +
geom_point() +
labs(x="Week number", y="Average price", colour="",
title="Average iPhone Prices Listed on September 23, 2019",
caption = "Source: marktplaats.nl") +
scale_y_continuous(labels = scales::dollar_format(suffix = "", prefix = "€"),
breaks = c(0, 250, 500, 750, 1000, 1250, 1500)) +
scale_x_continuous(breaks = c(1, 10, 20, 30, 38)) +
theme_pubr() +
theme(panel.grid.major.y = element_line(color="#d6d6d6"),
legend.position = "bottom")
# Plot
ggplot(data.first.analysis, aes(x=week, y=avg_price, colour=iphone_type)) +
annotate(geom="rect", xmin=34, xmax=38, ymin=-Inf, ymax=Inf, colour="grey", alpha=0.3) +
geom_line() +
geom_point() +
labs(x="Week number", y="Average price", colour="",
title="Average iPhone Prices Listed on September 23, 2019",
caption = "Source: marktplaats.nl") +
scale_y_continuous(labels = scales::dollar_format(suffix = "", prefix = "€"),
breaks = c(0, 250, 500, 750, 1000, 1250, 1500)) +
scale_x_continuous(breaks = c(1, 10, 20, 30, 38)) +
theme_pubr() +
theme(panel.grid.major.y = element_line(color="#d6d6d6"),
legend.position = "bottom")
# Plot
ggplot(data.first.analysis, aes(x=week, y=avg_price, colour=iphone_type)) +
annotate(geom="rect", xmin=34, xmax=38, ymin=-Inf, ymax=Inf, fill="grey", alpha=0.1) +
geom_line() +
geom_point() +
labs(x="Week number", y="Average price", colour="",
title="Average iPhone Prices Listed on September 23, 2019",
caption = "Source: marktplaats.nl") +
scale_y_continuous(labels = scales::dollar_format(suffix = "", prefix = "€"),
breaks = c(0, 250, 500, 750, 1000, 1250, 1500)) +
scale_x_continuous(breaks = c(1, 10, 20, 30, 38)) +
theme_pubr() +
theme(panel.grid.major.y = element_line(color="#d6d6d6"),
legend.position = "bottom")
# Plot
ggplot(data.first.analysis, aes(x=week, y=avg_price, colour=iphone_type)) +
annotate(geom="rect", xmin=34, xmax=38, ymin=-Inf, ymax=Inf, fill="grey", alpha=0.3) +
geom_line() +
geom_point() +
labs(x="Week number", y="Average price", colour="",
title="Average iPhone Prices Listed on September 23, 2019",
caption = "Source: marktplaats.nl") +
scale_y_continuous(labels = scales::dollar_format(suffix = "", prefix = "€"),
breaks = c(0, 250, 500, 750, 1000, 1250, 1500)) +
scale_x_continuous(breaks = c(1, 10, 20, 30, 38)) +
theme_pubr() +
theme(panel.grid.major.y = element_line(color="#d6d6d6"),
legend.position = "bottom")
# Plot
ggplot(data.first.analysis, aes(x=week, y=avg_price, colour=iphone_type)) +
annotate(geom="rect", xmin=35, xmax=38, ymin=-Inf, ymax=Inf, fill="grey", alpha=0.3) +
geom_line() +
geom_point() +
labs(x="Week number", y="Average price", colour="",
title="Average iPhone Prices Listed on September 23, 2019",
caption = "Source: marktplaats.nl") +
scale_y_continuous(labels = scales::dollar_format(suffix = "", prefix = "€"),
breaks = c(0, 250, 500, 750, 1000, 1250, 1500)) +
scale_x_continuous(breaks = c(1, 10, 20, 30, 38)) +
theme_pubr() +
theme(panel.grid.major.y = element_line(color="#d6d6d6"),
legend.position = "bottom")
# Listings per week
data.week <- data.listings %>%
group_by(week) %>%
summarise(n = N())
# Listings per week
data.week <- data.first.analysis %>%
group_by(week) %>%
summarise(n = sum(n))
data.first.analysis <- data.listings %>%
filter(!is.na(iphone_type), post_date >= ymd('2019-01-01')) %>%
mutate(week = week(post_date)) %>%
group_by(week, iphone_type) %>%
summarise(n = N(),
avg_price = mean(price))
data.first.analysis <- data.listings %>%
filter(!is.na(iphone_type), post_date >= ymd('2019-01-01')) %>%
mutate(week = week(post_date)) %>%
group_by(week, iphone_type) %>%
summarise(n = n(),
avg_price = mean(price))
# Listings per week
data.week <- data.first.analysis %>%
group_by(week) %>%
summarise(n = sum(n))
View(data.week)
ggplot(data.week, aes(x=week, y=n)) +
annotate(geom="rect", xmin=35, xmax=38, ymin=-Inf, ymax=Inf, fill="grey", alpha=0.3) +
geom_line() +
geom_point() +
labs(x="Week number", y="Numer of listings", colour="",
title="Number of iPhone Listings on September 23, 2019",
caption = "Source: marktplaats.nl") +
scale_y_continuous() +
scale_x_continuous(breaks = c(1, 10, 20, 30, 38)) +
theme_pubr() +
theme(panel.grid.major.y = element_line(color="#d6d6d6"),
legend.position = "bottom")
ggplot(data.week, aes(x=week, y=n)) +
annotate(geom="rect", xmin=37, xmax=38, ymin=-Inf, ymax=Inf, fill="grey", alpha=0.3) +
geom_line() +
geom_point() +
labs(x="Week number", y="Numer of listings", colour="",
title="Number of iPhone Listings on September 23, 2019",
caption = "Source: marktplaats.nl") +
scale_y_continuous() +
scale_x_continuous(breaks = c(1, 10, 20, 30, 38)) +
theme_pubr() +
theme(panel.grid.major.y = element_line(color="#d6d6d6"),
legend.position = "bottom")
library(mongolite)
library(tidyverse)
library(lubridate)
library(ggpubr)
m <- mongo("listings", "mpcrawl")
# Load all data (not that much data)
data <- m$find() %>% as_tibble() %>%
mutate_all(sapply, toString)
# Filter some users
data <- data %>%
filter(seller != "Biedveilingen") %>%
distinct(url, scrap_date, .keep_all=TRUE)
# Create variable to indicate advertisement
data <- data %>%
mutate(is_ad = if_else(str_sub(url, 1, 1) == "a", TRUE, FALSE))
# Clean date and price column
data.clean <- data %>%
mutate(price = if_else(str_detect(price, "€"), str_sub(price, 3),
NA_character_)) %>%
filter(!is.na(price)) %>%
mutate(price = str_replace(price, "\\.", ""),
price = as.numeric(str_replace(price, ",", "."))) %>%
mutate(post_date = dmy_hm(date, locale="nl_NL"))
# For now, only use actual listings
data.listings <- data.clean #%>%
#filter(!is_ad)
# First try: match title to type of iPhone using Levenhstein distance
data.listings <- data.listings %>%
mutate(title = str_to_lower(title)) %>%
mutate(iphone_type = case_when(
str_detect(title, "iphone 5s") ~ "iphone 5s",
str_detect(title, "iphone 5") ~ "iphone 5",
str_detect(title, "iphone 6s") ~ "iphone 6s",
str_detect(title, "iphone 6") ~ "iphone 6",
str_detect(title, "iphone se") ~ "iphone SE",
str_detect(title, "iphone 7 plus") ~ "iphone 7 Plus",
str_detect(title, "iphone 7") ~ "iphone 7",
str_detect(title, "iphone 8 plus") ~ "iphone 8 Plus",
str_detect(title, "iphone 8") ~ "iphone 8",
str_detect(title, "iphone xr") ~ "iphone XR",
str_detect(title, "iphone xs max") ~ "iphone XS Max",
str_detect(title, "iphone xs") ~ "iphone XS",
str_detect(title, "iphone x") ~ "iphone X",
str_detect(title, "iphone 10") ~ "iphone X",
str_detect(title, "iphone 11 pro max") ~ "iphone 11 Pro Max",
str_detect(title, "iphone 11 pro") ~ "iphone 11 Pro",
str_detect(title, "iphone 11") ~ "iphone 11",
TRUE ~ NA_character_
)) %>%
filter(!is.na(iphone_type)) %>%
mutate(iphone_type = factor(iphone_type, levels=c("iphone 5", "iphone 5s",
"iphone 6", "iphone SE",
"iphone 6s", "iphone 7",
"iphone 7 Plus", "iphone 8",
"iphone 8 Plus", "iphone X",
"iphone XR", "iphone XS",
"iphone XS Max", "iphone 11",
"iphone 11 Pro", "iphone 11 Pro Max"),
ordered=TRUE))
# Check what we missed
data.listings.missing <- data.listings %>%
filter(is.na(iphone_type))
data.phone <- data.listings %>%
group_by(iphone_type) %>%
summarise(N = n(),
avg_price = mean(price),
sd_price = sd(price))
ggplot(data.phone, aes(x=iphone_type, y=avg_price)) +
geom_bar(stat="identity") +
labs(x="", y="Average price") +
scale_y_continuous(labels = scales::dollar_format(suffix = "", prefix = "€")) +
theme_pubr() +
theme(panel.grid.major.y = element_line(color="#858585"),
axis.text.x = element_text(angle=-90, vjust = 0.1, hjust=0))
data.first.analysis <- data.listings %>%
filter(!is.na(iphone_type), post_date >= ymd('2019-01-01')) %>%
mutate(week = week(post_date)) %>%
group_by(week, iphone_type) %>%
summarise(n = n(),
avg_price = mean(price))
# Plot
ggplot(data.first.analysis, aes(x=week, y=avg_price, colour=iphone_type)) +
annotate(geom="rect", xmin=35, xmax=38, ymin=-Inf, ymax=Inf, fill="grey", alpha=0.3) +
geom_line() +
geom_point() +
labs(x="Week number", y="Average price", colour="",
title="Average iPhone Prices Listed on September 23, 2019",
caption = "Source: marktplaats.nl") +
scale_y_continuous(labels = scales::dollar_format(suffix = "", prefix = "€"),
breaks = c(0, 250, 500, 750, 1000, 1250, 1500)) +
scale_x_continuous(breaks = c(1, 10, 20, 30, 38)) +
theme_pubr() +
theme(panel.grid.major.y = element_line(color="#d6d6d6"),
legend.position = "bottom")
# Listings per week
data.week <- data.first.analysis %>%
group_by(week) %>%
summarise(n = sum(n))
ggplot(data.week, aes(x=week, y=n)) +
annotate(geom="rect", xmin=37, xmax=38, ymin=-Inf, ymax=Inf, fill="grey", alpha=0.3) +
geom_line() +
geom_point() +
labs(x="Week number", y="Numer of listings", colour="",
title="Number of iPhone Listings on September 23, 2019",
caption = "Source: marktplaats.nl") +
scale_y_continuous() +
scale_x_continuous(breaks = c(1, 10, 20, 30, 38)) +
theme_pubr() +
theme(panel.grid.major.y = element_line(color="#d6d6d6"),
legend.position = "bottom")
